import {SudokuValidator} from "./solution";

describe('Sudoku Validator', () => {
    it.each([
      [
        [
          ['','','','','','','','',''],
          ['','','','','','','','',''],
          ['','','','','','','','',''],
          ['','','','','','','','',''],
          ['','','','','','','','',''],
          ['','','','','','','','',''],
          ['','','','','','','','',''],
          ['','','','','','','','',''],
          ['','','','','','','','',''],
        ], true
      ],
      [
        [
          ['4','3','5','2','6','9','7','8','1'],
          ['6','8','2','5','7','1','4','9','3'],
          ['1','9','7','8','3','4','5','6','2'],
          ['8','2','6','1','9','5','3','4','7'],
          ['3','7','4','6','8','2','9','1','5'],
          ['9','5','1','7','4','3','6','2','8'],
          ['5','1','9','3','2','6','8','7','4'],
          ['2','4','8','9','5','7','1','3','6'],
          ['7','6','3','4','1','8','2','5','9'],
        ], true
      ],
      [
        [
          ['4','','','','6','9','7','','1'],
          ['6','8','','5','7','1','','','3'],
          ['1','9','','','','','5','','2'],
          ['8','2','6','1','','5','3','','7'],
          ['3','','','','','2','','1',''],
          ['','','','','','3','','2','8'],
          ['','1','9','','','6','','7','4'],
          ['','4','','9','5','7','','','6'],
          ['','6','3','','','','','5','9'],
        ], true
      ],
      [
        [
          ['4','','','','6','9','7','','4'],
          ['6','8','','5','7','1','','','3'],
          ['1','9','','','','','5','','2'],
          ['8','2','6','1','','5','3','','7'],
          ['3','','','','','2','','1',''],
          ['','','','','','3','','2','8'],
          ['','1','9','','','6','','7','4'],
          ['','4','','9','5','7','','','6'],
          ['','6','3','','','','','5','9'],
        ], false
      ],
      [
        [
          ['4','','','','6','9','7','','1'],
          ['6','8','','5','7','1','','','3'],
          ['1','9','','','','','5','','2'],
          ['8','2','6','1','','5','3','','7'],
          ['3','','','','','2','','1',''],
          ['','','','','','3','','2','8'],
          ['','1','9','','','6','','7','4'],
          ['','4','','9','5','7','','','6'],
          ['','6','3','','','','','5','6'],
        ], false
      ],
      [
        [
          ['4','','','','6','9','7','','1'],
          ['6','8','','5','7','1','','','3'],
          ['1','9','','','','','5','','2'],
          ['8','2','6','1','','5','3','','7'],
          ['4','','','','','2','','1',''],
          ['','','','','','3','','2','8'],
          ['','1','9','','','6','','7','4'],
          ['','4','','9','5','7','','','6'],
          ['','6','3','','','','','5','9'],
        ], false
      ],
      [
        [
          ['4','','','','6','9','7','','1'],
          ['6','8','','5','7','1','','','3'],
          ['1','9','','','','','5','','2'],
          ['8','2','6','1','','5','3','','7'],
          ['3','','','','','2','','1','4'],
          ['','','','','','3','','2','8'],
          ['','1','9','','','6','','7','4'],
          ['','4','','9','5','7','','','6'],
          ['','6','3','','','','','5','9'],
        ], false
      ],
      [
        [
          ['4','','','','6','9','7','','1'],
          ['6','8','','5','7','1','','','3'],
          ['1','9','4','','','','5','','2'],
          ['8','2','6','1','','5','3','','7'],
          ['3','','','','','2','','1',''],
          ['','','','','','3','','2','8'],
          ['','1','9','','','6','','7','4'],
          ['','4','','9','5','7','','','6'],
          ['','6','3','','','','','5','9'],
        ], false
      ],
      [
        [
          ['4','','','','6','9','7','','1'],
          ['6','8','','5','7','1','','','3'],
          ['1','9','','','','','5','','2'],
          ['8','2','6','1','','5','3','','7'],
          ['3','','','','','2','','1',''],
          ['','','','','','3','','2','8'],
          ['','1','','','','6','9','7','4'],
          ['','4','','9','5','7','','','6'],
          ['','6','3','','','','','5','9'],
        ], false
      ],
    ])('sudoku should return expected value', (sudoku: string[][], expected: boolean) => {
      expect(SudokuValidator(sudoku)).toBe(expected)
    })
});